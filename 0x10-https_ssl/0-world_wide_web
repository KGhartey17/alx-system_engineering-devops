#!/usr/bin/env bash
# Script to display subdomain information for a given domain
# Ignores shellcheck case SC2086

# Function to fetch and display subdomain info
get_subdomain_info() {
    local domain=$1
    local subdomain=$2

    # Use dig to get DNS info and filter the necessary data
    local result=$(dig "${subdomain}.${domain}" | grep -A1 'ANSWER SECTION:')
    local record_type=$(echo "$result" | awk '/IN/ {print $3}')
    local destination=$(echo "$result" | awk '/IN/ {print $5}')

    if [[ -n $record_type && -n $destination ]]; then
        echo "The subdomain ${subdomain} is a ${record_type} record and points to ${destination}"
    else
        echo "The subdomain ${subdomain} does not exist or has no valid records."
    fi
}

# Main script logic
if [[ $# -lt 1 ]]; then
    echo "Usage: $0 domain [subdomain]"
    exit 1
fi

domain=$1
subdomain=$2

# If a specific subdomain is provided, fetch its info
if [[ -n $subdomain ]]; then
    get_subdomain_info "$domain" "$subdomain"
else
    # List of default subdomains to query
    default_subdomains=(www lb-01 web-01 web-02)

    for sub in "${default_subdomains[@]}"; do
        get_subdomain_info "$domain" "$sub"
    done
fi
